name: Check code quality

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
          cache: 'pip'
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '>=1.19.0'
          cache: true
          cache-dependency-path: |
            lib/go.sum
            otelcol-exporter/datasetexporter/go.sum
            otelcol-exporter/otelcol-dataset/go.sum
      - name: Install pre-commit
        run: |
          python -m pip install -U pip
          python -m pip install pre-commit
      - name: Install pre-commit hooks
        run: |
          pre-commit install
      - name: Install go tools
        run: |
          go install -v golang.org/x/tools/cmd/goimports@latest
          go install -v github.com/fzipp/gocyclo/cmd/gocyclo@latest
          go install -v github.com/golangci/golangci-lint/cmd/golangci-lint@latest
          go install -v github.com/go-critic/go-critic/cmd/gocritic@latest
          go install -v github.com/BurntSushi/toml/cmd/tomlv@latest
          go install -v honnef.co/go/tools/cmd/staticcheck@latest
          go install -v mvdan.cc/gofumpt@latest
          go install -v github.com/kisielk/errcheck@latest
          go install -v github.com/quasilyte/go-ruleguard/cmd/ruleguard@latest
      - name: Run pre-commit
        run: |
          pre-commit run -a
      - name: Code coverage Lib
        run: |
          go test ./... -coverprofile coverage.out -covermode count
          go tool cover -func coverage.out
      - name: Build Examples
        run: |
          cd examples/client
          go build
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true
